$ sudo apt update && sudo apt upgrade -y

$ git config --global user.email "gabriele.salvato@cnr.it"
$ git config --global user.name "Gabriele Salvato"

$ sudo apt install qt5-default qtcreator libqt5websockets5-dev libqt5serialport5-dev ssh-askpass


$ mkdir qtprojects
$ cd qtprojects/
$ git clone https://github.com/salvato/ScorePanel.git
$ git clone https://github.com/salvato/SlideShow.git


SETTING UP A RASPBERRY PI AS AN ACCESS POINT IN A STANDALONE NETWORK (NAT)
https://www.raspberrypi.org/documentation/configuration/wireless/access-point.md

$ sudo apt install hostapd dnsmasq

Since the configuration files are not ready yet, turn the new software off as follows:

$ sudo systemctl stop dnsmasq
$ sudo systemctl stop hostapd


Configuring a static IP

To configure the static IP address, edit the dhcpcd configuration file with:

$ sudo nano /etc/dhcpcd.conf

Go to the end of the file and edit it so that it looks like the following:

	interface wlan0
	static ip_address=192.168.42.1/24
	static routers=192.168.42.1
	static domain_name_servers=192.168.42.1


Now restart the dhcpcd daemon and set up the new wlan0 configuration:

$ sudo service dhcpcd restart


Configuring the DHCP server (dnsmasq)

The DHCP service is provided by dnsmasq. 
By default, the configuration file contains a lot of information
that is not needed, and it is easier to start from scratch.
Rename this configuration file, and edit a new one:

$ sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig  
$ sudo nano /etc/dnsmasq.conf

Type or copy the following information into the dnsmasq configuration file and save it:

# Use the require wireless interface
# we are going to provide IP addresses between 192.168.4.2 and 192.168.4.20,
# with a lease time of 24 hours.
interface=wlan0      
  dhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24h



Configuring the access point host software (hostapd):

$ sudo nano /etc/hostapd/hostapd.conf

Insert the following text into the empty file:

	interface=wlan0
	driver=nl80211
	ssid=ScorePanels
	country_code=IT
	hw_mode=g
	channel=6
	wmm_enabled=0
	macaddr_acl=0
	auth_algs=1
	ignore_broadcast_ssid=0
	wpa=2
	wpa_passphrase=CusUniMe
	wpa_key_mgmt=WPA-PSK
	wpa_pairwise=TKIP
	rsn_pairwise=CCMP



$ sudo nano /etc/default/hostapd

Find the line with #DAEMON_CONF, and replace it with this:

DAEMON_CONF="/etc/hostapd/hostapd.conf"


Start it up:

Now start up the remaining services:

$ sudo systemctl start hostapd
$ sudo systemctl start dnsmasq

# If we want to control the pan and the tilt of the 
# Raspberry camera with two servos, we need to start
# the gpio daemon at boot time:

sudo nano /etc/rc.local

insert the followin line just before the line 
exit(0)

/usr/bin/pigpiod &



We have to DISABLE Screen Blanking to prevent the disappearing of the Score
during the match:

$ sudo nano /etc/lightdm/lightdm.conf

Search the line looking:
		#xserver-command=X

and change it in:

		# To disable screen blanking
		xserver-command=X -s 0 -dpms


Following a Dougie Lawson post on Oct 20, 2016 in the built-in WiFi on an RPI3
the power management is always off.
The driver may report that power management isn't off but it is not giving valid results.
For other USB WiFi devices it depends on the chipset used. Anyway if
we have to disable the power management of the WiFi we have to create a new file:


$ sudo nano /lib/systemd/system/wifi-power-management-off.service


and insert the following text:

	[Unit]
	Description=Disable power management for wlan0
	Requires=sys-subsystem-net-devices-wlan0.device
	After=network.target

	[Service]
	Type=oneshot
	ExecStart=/sbin/iwconfig wlan0 power off

	[Install]
	WantedBy=multi-user.target

And then enable the new service:

$ sudo systemctl enable wifi-power-management-off.service


Reboot and check the power save status of your interface:


$ iw dev wlan0 get power_save


it should be:

Power save: off

$ sudo nano /etc/rc.local

Insert:

		#Gabriele Salvato
		/usr/bin/pigpiod &

just before 
		exit 0

/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

Come installare APK manualmente

Vediamo come si effettua tale operazione in sicurezza. 
Prima di scaricarne ed installarne manualmente uno è necessario seguire 
una brevissima procedura. 
Recatevi nelle Impostazioni del vostro dispositivo e cercate la voce Sicurezza;
quest’ultima si trova talvolta in combinazione con Schermata di blocco,
e la dicitura da cercare potrebbe quindi essere Scherm. blocco e sicurezza.
Nell’elenco che visualizzerete dovrete cercare la voce Sorgenti sconosciute,
che, una volta attivata, 
“Consente l’installazione delle applicazioni da sorgenti diverse da Play Store.”,
ovvero proprio quello che fa al caso nostro!

Una volta attivata questa impostazioni siete pronti ad installare manualmente i file .apk. 
Per installarlo dovrete per prima cosa individuare il file sul vostro dispositivo. 
Per fare ciò dovrete servirvi di un file manager, ovvero di un’applicazione
che vi permetta di esplorare il contenuto delle vostre cartelle.

Di solito gli APK scaricati direttamente da smartphone finiscono nella cartella Download.
Buona parte degli smartphone hanno applicazioni denominate Archivio o simili
che vi permettono di esplorare le cartelle presenti e di scovare quella denominata 
appunto Download. 

Se non avete un buon file manager sul vostro smartphone Android potete sempre 
recuperarlo dal Play Store: provate ad esempio Astro. 

Una volta trovata, cercate l’APK che volete installare e premeteci sopra.

Se il vostro dispositivo è dotato della versione Android 6.0 Marshmallow o superiori, 
una volta premuto sull’APK, oltre a visualizzare l’apposito pulsante per proseguire 
con l’installazione, potrete anche consultare i permessi che richiederà l’applicazione 
per essere eseguita a dovere. 

Non tralasciate queste informazioni: visto che potrebbe capitarvi di installare APK 
presi appunto da “sorgenti sconosciute“, è sempre bene controllare a cosa si va incontro.

Impossibile aprire file apk

È possibile che tentando di installare un apk scaricato da Internet, 
si venga accolti da una schermata di errore che solitamente riporta il messaggio 

“Impossibile aprire file apk“. 

Le alternative sono due: o il vostro smartphone/tablet Android è incompatibile 
con l’applicazione/gioco che state cercando di installare, o il file apk da voi 
scaricato è in qualche modo corrotto o danneggiato.

Nel primo caso c’è ben poco da fare, vi dovrete rassegnare a non utilizzare 
quell’applicazione o quel gioco sul vostro dispositivo. 

Potete provare a cercare su Google se effettivamente il vostro dispositivo è 
incompatibile con quel gioco (di solito è sufficiente cercare la combinazione 
dei termini “nome dispositivo” + “nome app/gioco“). 

In caso contrario, potrebbe quindi essere incappati in un apk corrotto. 

Provate a cercare lo stesso file da un’altra fonte, facendo comunque attenzione 
a non incappare in siti poco raccomandabili.

/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

We should start the panel contro program at every restart of the Raspberry:

$ nano ~/.config/lxsession/LXDE-pi/autostart

change the lines 
@xscreensaver -no-splash

commenting it since we dont want that a screensaver can obscure the panel

#@xscreensaver -no-splash

and insert a line to start at every reboot the panel control program:

@~/panelChooser &

save and reboot.


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

We have to configure the access point:

$ sudo nano /etc/hostapd/hostapd.conf

	interface=wlan0
	ssid=ScorePanels
	country_code=IT
	hw_mode=g
	channel=6
	macaddr_acl=0
	auth_algs=1
	ignore_broadcast_ssid=0
	wpa=2
	wpa_passphrase=CusUniMe
	wpa_key_mgmt=WPA-PSK
	wpa_pairwise=CCMP
	wpa_group_rekey=86400
	ieee80211n=1
	wme_enabled=1

$ sudo nano /etc/default/hostapd
		Find the line looking #DAEMON_CONF="" and change it in :

			DAEMON_CONF="/etc/hostapd/hostapd.conf"

$ sudo nano /etc/init.d/hostapd
		Find the line looking DAEMON_CONF= and change it in :

			DAEMON_CONF=/etc/hostapd/hostapd.conf


We have to set up DHCP server:

$ sudo nano /etc/dhcp/dhcpd.conf


	#
	# Sample configuration file for ISC dhcpd for Debian
	#
	#

	# The ddns-updates-style parameter controls whether or not the server will
	# attempt to do a DNS update when a lease is confirmed. We default to the
	# behavior of the version 2 packages ('none', since DHCP v2 didn't
	# have support for DDNS.)
	ddns-update-style none;

	# option definitions common to all supported networks...
	#option domain-name "example.org";
	#option domain-name-servers ns1.example.org, ns2.example.org;

	default-lease-time 600;
	max-lease-time 7200;

	# If this DHCP server is the official DHCP server for the local
	# network, the authoritative directive should be uncommented.
	authoritative;

	# Use this to send dhcp log messages to a different log file (you also
	# have to hack syslog.conf to complete the redirection).
	log-facility local7;

	# No service will be given on this subnet, but declaring it helps the 
	# DHCP server to understand the network topology.

	#subnet 10.152.187.0 netmask 255.255.255.0 {
	#}

	# This is a very basic subnet declaration.

	#subnet 10.254.239.0 netmask 255.255.255.224 {
	#  range 10.254.239.10 10.254.239.20;
	#  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
	#}

	# This declaration allows BOOTP clients to get dynamic addresses,
	# which we don't really recommend.

	#subnet 10.254.239.32 netmask 255.255.255.224 {
	#  range dynamic-bootp 10.254.239.40 10.254.239.60;
	#  option broadcast-address 10.254.239.31;
	#  option routers rtr-239-32-1.example.org;
	#}

	# A slightly different configuration for an internal subnet.
	#subnet 10.5.5.0 netmask 255.255.255.224 {
	#  range 10.5.5.26 10.5.5.30;
	#  option domain-name-servers ns1.internal.example.org;
	#  option domain-name "internal.example.org";
	#  option routers 10.5.5.1;
	#  option broadcast-address 10.5.5.31;
	#  default-lease-time 600;
	#  max-lease-time 7200;
	#}

	# Hosts which require special configuration options can be listed in
	# host statements.   If no address is specified, the address will be
	# allocated dynamically (if possible), but the host-specific information
	# will still come from the host declaration.

	#host passacaglia {
	#  hardware ethernet 0:0:c0:5d:bd:95;
	#  filename "vmunix.passacaglia";
	#  server-name "toccata.fugue.com";
	#}

	# Fixed IP addresses can also be specified for hosts.   These addresses
	# should not also be listed as being available for dynamic assignment.
	# Hosts for which fixed IP addresses have been specified can boot using
	# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
	# be booted with DHCP, unless there is an address range on the subnet
	# to which a BOOTP client is connected which has the dynamic-bootp flag
	# set.
	#host fantasia {
	#  hardware ethernet 08:00:07:26:c0:a5;
	#  fixed-address fantasia.fugue.com;
	#}

	# You can declare a class of clients and then do address allocation
	# based on that.   The example below shows a case where all clients
	# in a certain class get addresses on the 10.17.224/24 subnet, and all
	# other clients get addresses on the 10.0.29/24 subnet.

	#class "foo" {
	#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
	#}

	#shared-network 224-29 {
	#  subnet 10.17.224.0 netmask 255.255.255.0 {
	#    option routers rtr-224.example.org;
	#  }
	#  subnet 10.0.29.0 netmask 255.255.255.0 {
	#    option routers rtr-29.example.org;
	#  }
	#  pool {
	#    allow members of "foo";
	#    range 10.17.224.10 10.17.224.250;
	#  }
	#  pool {
	#    deny members of "foo";
	#    range 10.0.29.10 10.0.29.230;
	#  }
	#}

	####################################################
	# Configurazione della rete di pannelli segnapunti #
	####################################################
	subnet 192.168.42.0 netmask 255.255.255.0 {
		range 192.168.42.2 192.168.42.10;
		option broadcast-address 192.168.42.255;
		option routers 192.168.42.1;
		default-lease-time 3000;
		max-lease-time 14200;
		option domain-name "local";
		option domain-name-servers 192.168.42.1;
	}




If we want to control the pan and the tilt of the camera with two servos
we need to start the gpio daemon at boot time:


$ sudo nano /etc/rc.local

		Insert:

			#Gabriele Salvato
			/usr/bin/pigpiod &

		just before 
			exit 0



It is time to set it up as a 'daemon', a program that will start when the Pi boots.
Run the following commands:

$ sudo systemctl hostapd start
$ sudo systemctl isc-dhcp-server start 

Sono questi due comandi necessari ?

	$ sudo update-rc.d hostapd enable
	$ sudo update-rc.d isc-dhcp-server enable 

Disable the power management of wifi in order to disable the power off
of the network interface. Create a new file:

$ nano wifi-power-management-off.service and insert the following text:

	[Unit]
	Description=Disable power management for wlan0
	Requires=sys-subsystem-net-devices-wlan0.device
	After=network.target

	[Service]
	Type=oneshot
	ExecStart=/sbin/iwconfig wlan0 power off

	[Install]
	WantedBy=multi-user.target

   
$ sudo mv wifi-power-management-off.service /lib/systemd/system/
$ sudo systemctl enable wifi-power-management-off.service

Check the power save status of your interface:
 
$ iw dev wlan0 get power_save



Serve ?
   37  sudo cp isc-dhcp-server /etc/default/

Servono ?
   38  sudo ifdown wlan0
   39  sudo leafpad /etc/network/interfaces

		# interfaces(5) file used by ifup(8) and ifdown(8)

		# Please note that this file is written to be used with dhcpcd
		# For static IP, consult /etc/dhcpcd.conf and 'man dhcpcd.conf'

		# Include files from /etc/network/interfaces.d:
		source-directory /etc/network/interfaces.d

		auto lo
		iface lo inet loopback

		iface eth0 inet manual

		allow-hotplug wlan0

		iface wlan0 inet static
		    address 192.168.42.1
		    netmask 255.255.255.0

		#iface wlan0 inet manual
		#    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

		allow-hotplug wlan1
		iface wlan1 inet manual
		    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf



   40  cd ../hostapd/
   41  ls
   42  sudo cp hostapd.conf /etc/hostapd/
   43  cd ../default/


Serve ?
   44  sudo cp hostapd /etc/default/
   45  cd ../init.d/
Serve ?
   46  sudo cp hostapd /etc/init.d/


Serve ?
   76  nano /etc/network/interfaces

Serve ?
   89  sudo chgrp netdev dhcpcd.conf

